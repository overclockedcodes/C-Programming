Program 1: Input two numbers and perform Addition, Subtraction, Multiplication, and Division.

#include <stdio.h>

int main() {
    int a, b;

    printf("Enter the first number: ");
    scanf("%d", &a);

    printf("Enter the second number: ");
    scanf("%d", &b);

    printf("Addition: %d\n", a + b);
    printf("Subtraction: %d\n", a - b);
    printf("Multiplication: %d\n", a * b);

    if (b != 0)
        printf("Division: %d\n", a / b);
    else
        printf("Cannot divide by zero.\n");

    return 0;
}


Program 2: 

1. Check if a number is an Armstrong number

#include <stdio.h>

int main() {
    int number, sumOfCubes = 0, digit, originalNumber;

    printf("Enter any Number: ");
    scanf("%d", &number);

    originalNumber = number;

    while (number > 0) {
        digit = number % 10;
        sumOfCubes += digit * digit * digit;
        number = number / 10;
    }

    if (originalNumber == sumOfCubes)
        printf("Armstrong Number\n");
    else
        printf("Not an Armstrong Number\n");

    return 0;
}


2. Check if a number is a Palindrome number

#include <stdio.h>

int main() 
{ 
    int originalNumber, reversedNumber = 0, remainder, tempNumber;

    printf("Enter any Number: "); 
    scanf("%d", &originalNumber);

    tempNumber = originalNumber;

    while (tempNumber > 0) 
    { 
        remainder = tempNumber % 10; 
        reversedNumber = remainder + (reversedNumber * 10); 
        tempNumber = tempNumber / 10; 
    } 

    if (originalNumber == reversedNumber) 
        printf("Palindrome Number\n"); 
    else 
        printf("Not a Palindrome Number\n"); 

    return 0; 
}


3. Check if a number is a Prime number

#include <stdio.h>

int main() 
{ 
    int number, factorCount = 0, i;

    printf("Enter any Number: "); 
    scanf("%d", &number); 

    for(i = 1; i <= number; i++) 
    { 
        if(number % i == 0) 
        { 
            factorCount++; 
        } 
    } 

    if(factorCount == 2) 
        printf("Prime Number\n"); 
    else 
        printf("Not a Prime Number\n"); 

    return 0; 
}



Program 3: 

1. Loop-based Pyramid Pattern

#include <stdio.h>

int main() {
    int i, j, space;
    int rows = 5;

    for (i = 1; i <= rows; i++) {
        // Print spaces
        for (space = 1; space <= rows - i; space++) {
            printf(" ");
        }

        // Print stars
        for (j = 1; j <= 2 * i - 1; j++) {
            printf("*");
        }

        // Move to next line
        printf("\n");
    }

    return 0;
}


2. Write a program using for loop to print the first 10 natural numbers

#include <stdio.h>

int main() {
    int i;

    for (i = 1; i <= 10; i++) {
        printf("%d\n", i);
    }

    return 0;
}